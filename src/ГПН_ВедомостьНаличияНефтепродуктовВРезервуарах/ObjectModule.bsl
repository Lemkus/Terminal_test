

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	УстановитьЗначениеПараметраНастроекЕслиЗаполнено("Организация", ЭтотОбъект.Организация);
	УстановитьЗначениеПараметраНастроекЕслиЗаполнено("СменныйОтчет", ЭтотОбъект.СменныйОтчет);
	УстановитьЗначениеПараметраНастроекЕслиЗаполнено("ИсточникПрочих", ЭтотОбъект.ИнвентаризационнаяОпись);
	УстановитьЗначениеПараметраНастроекЕслиЗаполнено("ЗавСкладом", ЭтотОбъект.ЗавСкладом);
	УстановитьЗначениеПараметраНастроекЕслиЗаполнено("СпециалистПоУчету", ЭтотОбъект.СпециалистПоУчету);
	
	СтандартнаяОбработка = Ложь; 
	ГПН_РаботаССКД.ВывестиСКДВТабличныйДокумент(СхемаКомпоновкиДанных, ДокументРезультат, КомпоновщикНастроек);
	
	МаркерПоиска = "{СКРЫТЬСТРОКУ}"; 
	ГПН_РаботаССКД.СкрытьСтрокиВТабличномДокументе(ДокументРезультат, МаркерПоиска);
	
	МаркерПоиска = "{ОБЪЕДИНИТЬ}"; 
	ОбъединтьЯчейкиВТабличномДокументе(ДокументРезультат, МаркерПоиска);
	ГПН_РаботаССКД.ЗаменитьТекстВТабличномДокументе(ДокументРезультат, МаркерПоиска, "");
	
	ДокументРезультат.ФиксацияСверху = 0;
	ДокументРезультат.ФиксацияСлева = 0;
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.АвтоМасштаб = Истина;
	
КонецПроцедуры

Процедура УстановитьЗначениеПараметраНастроекЕслиЗаполнено(ИмяПараметра, ЗначениеПараметра)
	Если НЕ ЗначениеЗаполнено(ЗначениеПараметра) Тогда
		Возврат;
	КонецЕсли;
	
	ГПН_РаботаССКД.УстановитьЗначениеПараметраНастроек(КомпоновщикНастроек, ИмяПараметра, ЗначениеПараметра);  
КонецПроцедуры

#Область _ // Будет перенесено в ГПН_РаботаССКД

Процедура ОбъединтьЯчейкиВТабличномДокументе(ТабличныйДокумент, МаркерОбъединения) Экспорт
	// Находит ячейки, содержащие в тексте МаркерОбъединения
	// Объединяет ячейки, располагающиеся рядом, содержащие одинаковый текст и маркер объединения 
	
	ОбъединяемыеЯчейки = НайтиОбластиТабличногоДокументаПоВхождениюПодстроки(ТабличныйДокумент, МаркерОбъединения);
	ОбъединяемыеЯчейки.Колонки.Добавить("Диапазон");
	ОбъединяемыеЯчейки.Сортировать("Верх,Лево");
	
	Для Каждого Строка из ОбъединяемыеЯчейки Цикл
		Отбор = Новый Структура("Текст,Верх,Лево", Строка.Текст, Строка.Верх-1, Строка.Лево);
		НайденныеСтроки = ОбъединяемыеЯчейки.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() Тогда
			Строка.Диапазон = НайденныеСтроки[0].Диапазон;
			Строка.Диапазон.Низ = Макс(Строка.Диапазон.Низ, Строка.Верх);
			Продолжить;
		КонецЕсли;
		
		Отбор = Новый Структура("Текст,Верх,Лево", Строка.Текст, Строка.Верх, Строка.Лево-1);
		НайденныеСтроки = ОбъединяемыеЯчейки.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() Тогда
			Строка.Диапазон = НайденныеСтроки[0].Диапазон;
			Строка.Диапазон.Право = Макс(Строка.Диапазон.Право, Строка.Лево);
			Продолжить;
		КонецЕсли;
		
		Строка.Диапазон = Новый Структура("Текст,Верх,Лево,Низ,Право", Строка.Текст, Строка.Верх, Строка.Лево, Строка.Верх, Строка.Лево);
	КонецЦикла;
	
	ОбъединяемыеЯчейки.Свернуть("Диапазон");
	Для Каждого Строка Из ОбъединяемыеЯчейки Цикл
		Диапазон = Строка.Диапазон;
		Область = ТабличныйДокумент.Область(Диапазон.Верх, Диапазон.Лево, Диапазон.Низ, Диапазон.Право);
		Область.Объединить();
	КонецЦикла;
	
КонецПроцедуры
Функция НайтиОбластиТабличногоДокументаПоВхождениюПодстроки(ТабличныйДокумент, ПодстрокаПоиска) Экспорт
	
	НайденныеОбласти = Новый ТаблицаЗначений;
	НайденныеОбласти.Колонки.Добавить("Область");
	НайденныеОбласти.Колонки.Добавить("Текст");
	НайденныеОбласти.Колонки.Добавить("Верх");
	НайденныеОбласти.Колонки.Добавить("Лево");
	
	НайденнаяОбласть = ТабличныйДокумент.НайтиТекст(ПодстрокаПоиска);
	
	Пока НЕ НайденнаяОбласть = Неопределено Цикл
		
		НоваяСтрока = НайденныеОбласти.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденнаяОбласть);
		НоваяСтрока.Область = НайденнаяОбласть;
		
		НайденнаяОбласть = ТабличныйДокумент.НайтиТекст(ПодстрокаПоиска, НайденнаяОбласть);
		
	КонецЦикла;
	
	Возврат НайденныеОбласти;
	
КонецФункции

#КонецОбласти